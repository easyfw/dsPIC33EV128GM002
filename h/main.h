#ifndef MAIN_H_ // Start of MAIN_H_ 
#define MAIN_H_

#include <stdbool.h>
#include <stdint.h> 

// Configuration bits
#pragma config FNOSC = PRIPLL, POSCMD = XT, FCKSM = CSECMD, OSCIOFNC = OFF, IOL1WAY = OFF          
#pragma config FWDTEN = OFF, ICS = PGD1, BOREN0 = OFF, ALTI2C1 = OFF, DMTEN = DISABLE

//
const uint16_t harsh_emc_nvm_config[128] = 
{
    0xC008, 0x0886, 0xA022, 0x61A2, 0xA010, 0x0800, 0x0000, 0xC1F0,
    0x80FA, 0x5408, 0x0000, 0x0000, 0x0610, 0x3740, 0x8610, 0x0400,
    0x4DE1, 0x1D80, 0x5F9A, 0x1503, 0x1526, 0xFFFF, 0x0003, 0x00B0,
    0x0000, 0x0000, 0x4000, 0x0000, 0x0002, 0x0008, 0x0000, 0x0000,
    0x7FFF, 0x0002, 0x0005, 0x0000, 0x0000, 0x0000, 0x0000, 0x4000,
    0xB847, 0x0096, 0x0097, 0xFF00, 0x1000, 0x0001, 0x5898, 0x6C48,
    0x0000, 0x0001, 0x8000, 0xFC00, 0xF000, 0x1000, 0x8000, 0x7FFF,
    0x0400, 0x7BFF, 0x3000, 0x6900, 0x5103, 0x17AD, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x589C, 0x1805, 0x589A,
    0x1804, 0xE28B, 0x3E1D, 0xE286, 0x3C1D, 0x58A4, 0x1802, 0x98A0,
    0x1817, 0xD898, 0x1803, 0x4400, 0x3A02, 0x7678, 0x1800, 0xB410,
    0x8600, 0x3800, 0x0244, 0x98A2, 0x1815, 0xD89E, 0x1819, 0xCA07,
    0x3206, 0xBA92, 0x4621, 0x2A00, 0x4017, 0x1291, 0x2E90, 0x2280,
    0x2E16, 0x121F, 0x2C1E, 0x0400, 0x2A16, 0x0000, 0x2C01, 0x5286,
    0x5000, 0x0000, 0x0000, 0x0000, 0x1428, 0x1DBC, 0x0000, 0x0000
};

//
const uint16_t nvm_response_time_config[128] = 
{
    0x1572, 0x0886, 0xA022, 0x61A2, 0xA010, 0x0800, 0x0000, 0xC1F0,
    0x80FA, 0x5408, 0x0000, 0x0000, 0x8610, 0x0400, 0x0E10, 0x3740,
    0x4DE1, 0x1D80, 0x5F9A, 0x1503, 0x1126, 0xFFFF, 0x0003, 0x00B0,
    0x0000, 0x0000, 0x4000, 0x0000, 0x0002, 0x0008, 0x0000, 0x0000,
    0x7FFF, 0x0002, 0x0005, 0x0000, 0x0000, 0x0000, 0x0000, 0x4000,
    0xB847, 0x0096, 0x0097, 0xFF00, 0x1000, 0x0001, 0x5898, 0x6C48,
    0x0000, 0x0001, 0x8000, 0xFC00, 0xF000, 0x1000, 0x8000, 0x7FFF,
    0x0400, 0x7BFF, 0x3000, 0x6900, 0x5102, 0x17B0, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x589C, 0x1805,
    0x589A, 0x1804, 0xE28B, 0x3E1D, 0xE286, 0x3C1D, 0x58A4, 0x1802,
    0x98A0, 0x1817, 0xD898, 0x1803, 0x4400, 0x3A02, 0x7678, 0x1800,
    0x3410, 0x8600, 0x3800, 0x0244, 0x98A2, 0x1815, 0xD89E, 0x1819,
    0xCA07, 0x3206, 0xBA92, 0x4621, 0x2A00, 0x4017, 0x1291, 0x2E90,
    0x2280, 0x2E16, 0x121F, 0x2C1E, 0x0400, 0x2A16, 0x0001, 0x2C00,
    0x5286, 0x5000, 0x0000, 0x0000, 0x0000, 0x1428, 0x1DBC, 0x0000,
};

//
volatile uint32_t t1_tick, t2_tick;
volatile uint8_t t3_done;

volatile bool sent_rx;                  // receive message flags
volatile uint16_t datal, datah;

volatile uint8_t buffer[6];
volatile float T, H;
volatile uint32_t count = 1;

uint16_t tickTime = 3;             // Tick time in us
float peripheralClk = 40.0;      // in Mhz

#endif // End of MAIN_H_ 